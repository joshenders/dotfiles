# enable for Node development
#source /opt/local/share/nvm/init-nvm.sh

###########
# Aliases #
###########

# unified diff, for human readability
# diff-so-fancy
alias diff='diff -u'

# disable command printing in dig output
alias dig='dig +nocmd'

# confirm and verbose
alias rm='rm -iv'

# confirm, verbose, noclobber
alias mv='mv -iv' # does not support kjv

# Enabled colorized output in tree
alias tree='tree -C'

# Colorized output, classification, and metadata
alias ls='ls -FGO'

# Convenient audible bell alias for alerting
alias bell='printf "\a"'

# Lock screen
alias lock='/System/Library/CoreServices/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine'

# Show wifi info
alias airport='/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -I'

# Dig for .local multicast addresses
alias mdig='dig @224.0.0.251 -p 5353'

# show usb info
alias lsusb='system_profiler SPUSBDataType'

# Don't print banner and import math libs as a simple way to set 'scale'
# This can also be done with:
#   `export BC_ENV_ARGS=~/.bc; echo 'scale=20' >> ~/.bc`
alias bc='bc -q -l'

# expand aliases after sudo
alias sudo='sudo ' # trailing whitespace intentional

###############
# Environment #
###############

#export PATH="/opt/local/bin:/opt/local/sbin:${DEVKITPRO}/tools/bin:/Applications/Visual Studio Code.app/Contents/Resources/app/bin:${PATH}"
export PATH="~/.local/bin:/opt/local/bin:/opt/local/sbin:~/Library/Python/3.12/bin:/Applications/Visual Studio Code.app/Contents/Resources/app/bin:${PATH}"

# If this is set, Python wonâ€™t try to write .pyc or .pyo files on the import
# of source modules.
#export PYTHONDONTWRITEBYTECODE=true

# Set preferred editor
# This is checked before $EDITOR on some older utils
export VISUAL=vim
export EDITOR=vim

# colorized grep output
export GREP_OPTIONS='--color=auto'

# Unset bounds on history file.
export HISTFILESIZE=
export HISTSIZE=

# Add timestamps to .bash_history
# TODO: ideally finding someway to store the current working directory for
# those times when you want to know where you ran that career ending command
export HISTTIMEFORMAT="%Y-%m-%d %T "

# The "ignoreboth" setting ignores repeated lines as well as silently discards
# lines beginning with a space for privacy. Equivalent to 'ignoredups' and
# 'ignorespace'
export HISTCONTROL=ignoreboth

# Commands to not log in history
export HISTIGNORE=ls:cd

# Lua package path
export LUA_PATH='/Users/jenders/.luarocks/share/lua/5.3/?.lua;/Users/jenders/.luarocks/share/lua/5.3/?/init.lua;;'

# Lua so path
export LUA_CPATH='/Users/jenders/.luarocks/lib/lua/5.3/?.so;;'

# Force ls to output ansi escape sequences (colors) even when output is not a terminal, eg. a pipe
export CLICOLOR_FORCE=true
#
# causes raw control characters to be printed and therefore interpreted by your terminal
export LESS=-R

export MANPATH="/opt/local/share/man:${MANPATH}"

# Less colors for man pages
# - http://linuxtidbits.wordpress.com/2009/03/23/less-colors-for-man-pages/
#export LESS_TERMCAP_mb=$'\e[01;31m'       # begin blinking
#export LESS_TERMCAP_md=$'\e[01;38;5;74m'  # begin bold
#export LESS_TERMCAP_me=$'\e[0m'           # end mode
#export LESS_TERMCAP_se=$'\e[0m'           # end standout-mode
#export LESS_TERMCAP_so=$'\e[38;5;246m'    # begin standout-mode - info box
#export LESS_TERMCAP_ue=$'\e[0m'           # end underline
#export LESS_TERMCAP_us=$'\e[04;38;5;146m' # begin underline

# Happy/Sad Prompt
export PS1='\[\e[1;34m\]\u\[\e[1;30m\]@\[\e[1;36m\]\h \[\e[34m\]\W \[\e[3$((($?))&&echo 1m\]:\(||echo 2m\]:\)) \[\e[30m\]\$ \[\e[0m\]'

# https://support.apple.com/en-us/HT208050
export BASH_SILENCE_DEPRECATION_WARNING=1

# https://github.com/devkitPro
#export DEVKITPRO=/opt/devkitpro
#export DEVKITARM=${DEVKITPRO}/devkitARM
#export DEVKITPPC=${DEVKITPRO}/devkitPPC

export DISPLAY=':0.0'

#############
# Functions #
#############

function typora() {
    nohup /Applications/Typora.app/Contents/MacOS/typora "$@" >/dev/null 2>&1 &
}

function vax() {
    xattr -vrd com.apple.quarantine "$1"
}


function flushcache() {
    sudo \dscacheutil -flushcache
    sudo \killall -HUP mDNSResponder
}


function certchain() {
    # Usage: certchain
    # Displays PKI trust chain for a given domain
    if [[ "$#" -ne 1 ]]; then
        echo "Usage: ${FUNCNAME} <ip|domain[:port]>"
        return 1
    fi

    local host_port="$1"

    if [[ "$1" != *:* ]]; then
        local host_port="${1}:443"
    fi

    \openssl \
        s_client -connect "${host_port}" </dev/null 2>/dev/null \
        | \fgrep \
            --color=never \
            --extended-regexp '\ (s|i):'
}


urlencode() {
    # urlencode <string>
    local LC_COLLATE=C
    local length="${#1}"
    for (( i = 0; i < length; i++ )); do
        local c="${1:$i:1}"
        case $c in
            [a-zA-Z0-9.~_-]) printf '%s' "$c" ;;
            *) printf '%%%02X' "'$c" ;;
        esac
    done
}

urldecode() {
    # urldecode <string>
    local url_encoded="${1//+/ }"
    printf '%b' "${url_encoded//%/\\x}"
}

sudofix() {
    echo 'sudo bash -c '\''echo "auth       sufficient     pam_tid.so" >> /etc/pam.d/sudo'\'''
}
